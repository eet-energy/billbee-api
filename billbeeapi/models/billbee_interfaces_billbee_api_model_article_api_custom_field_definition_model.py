# -*- coding: utf-8 -*-

"""
billbeeapi

This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class BillbeeInterfacesBillbeeAPIModelArticleApiCustomFieldDefinitionModel(object):

    """Implementation of the 'Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel' model.

    TODO: type model description here.

    Attributes:
        id (long|int): TODO: type description here.
        name (string): TODO: type description here.
        configuration (object): TODO: type description here.
        mtype (TypeEnum): TODO: type description here.
        is_nullable (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'Id',
        "name": 'Name',
        "configuration": 'Configuration',
        "mtype": 'Type',
        "is_nullable": 'IsNullable'
    }

    def __init__(self,
                 id=None,
                 name=None,
                 configuration=None,
                 mtype=None,
                 is_nullable=None):
        """Constructor for the BillbeeInterfacesBillbeeAPIModelArticleApiCustomFieldDefinitionModel class"""

        # Initialize members of the class
        self.id = id
        self.name = name
        self.configuration = configuration
        self.mtype = mtype
        self.is_nullable = is_nullable

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get('Id')
        name = dictionary.get('Name')
        configuration = dictionary.get('Configuration')
        mtype = dictionary.get('Type')
        is_nullable = dictionary.get('IsNullable')

        # Return an object of this model
        return cls(id,
                   name,
                   configuration,
                   mtype,
                   is_nullable)
