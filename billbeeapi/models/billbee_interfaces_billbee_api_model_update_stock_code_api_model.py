# -*- coding: utf-8 -*-

"""
billbeeapi

This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class BillbeeInterfacesBillbeeAPIModelUpdateStockCodeApiModel(object):

    """Implementation of the 'Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeApiModel' model.

    TODO: type model description here.

    Attributes:
        billbee_id (long|int): TODO: type description here.
        sku (string): TODO: type description here.
        stock_id (long|int): TODO: type description here.
        stock_code (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {"billbee_id": "BillbeeId", "sku": "Sku", "stock_id": "StockId", "stock_code": "StockCode"}

    def __init__(self, billbee_id=None, sku=None, stock_id=None, stock_code=None):
        """Constructor for the BillbeeInterfacesBillbeeAPIModelUpdateStockCodeApiModel class"""

        # Initialize members of the class
        self.billbee_id = billbee_id
        self.sku = sku
        self.stock_id = stock_id
        self.stock_code = stock_code

    @classmethod
    def from_dictionary(cls, dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        billbee_id = dictionary.get("BillbeeId")
        sku = dictionary.get("Sku")
        stock_id = dictionary.get("StockId")
        stock_code = dictionary.get("StockCode")

        # Return an object of this model
        return cls(billbee_id, sku, stock_id, stock_code)
